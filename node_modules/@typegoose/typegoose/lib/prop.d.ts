import { WhatIsIt } from './internal/constants';
import type { ArrayPropOptions, BasePropOptions, DecoratedPropertyMetadata, MapPropOptions, PropOptionsForNumber, PropOptionsForString, VirtualOptions } from './types';
/**
 * Function that is the actual processing of the prop's (used for caching)
 * @param input All the options needed for prop's
 */
export declare function _buildPropMetadata(input: DecoratedPropertyMetadata): void;
/**
 * Set Property Options for the property below
 * @param options Options
 * @param kind Overwrite auto-inferred kind
 * @example
 * ```ts
 * class ClassName {
 *   @prop()
 *   public someprop: string;
 * }
 * ```
 */
declare function prop(options?: BasePropOptions | ArrayPropOptions | MapPropOptions | PropOptionsForNumber | PropOptionsForString | VirtualOptions, kind?: WhatIsIt): (target: any, key: string) => void;
/**
 * Set Property(that are Maps) Options for the property below
 * @param options Options for the Map
 *
 * @deprecated use "prop"
 */
declare function mapProp(options: MapPropOptions): (target: any, key: string) => void;
/**
 * Set Property(that are Arrays) Options for the property below
 * @param options Options
 *
 * @deprecated use "prop"
 */
declare function arrayProp(options: ArrayPropOptions): (target: any, key: string) => void;
export { prop, arrayProp, mapProp };
export { prop as Prop, arrayProp as ArrayProp, mapProp as MapProp };
